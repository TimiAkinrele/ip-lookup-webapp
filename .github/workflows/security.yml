name: DevSecOps Security Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write   # required for SARIF uploads
  actions: read
  checks: write

jobs:
  # ========================
  # Build Stage
  # ========================
  build:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.11'
    steps:
      # ----------- Checkout code -----------
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ----------- Python setup -----------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      # ----------- Install dependencies -----------
      - name: Install project requirements (if present)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # ----------- Docker setup -----------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ----------- DockerHub login -----------
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ----------- Build Docker image -----------
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ip-lookup-webapp:${{ github.sha }},ip-lookup-webapp-server:latest
          load: true
          provenance: false

      # ----------- Push Docker image -----------
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/ip-lookup-webapp:${{ github.sha }}

      # ----------- Upload build artifacts -----------
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: coverage

  # ========================
  # Security Stage
  # ========================
  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # ----------- Checkout code -----------
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ----------- Trivy filesystem scan -----------
      - name: Run Trivy vulnerability scanner on filesystem
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          exit-code: 1

      # ----------- Trivy image scan -----------
      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ip-lookup-webapp-server:latest
          format: 'sarif'
          output: 'trivy-image.sarif'
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true

      # ----------- Upload Trivy SARIF -----------
      - name: Upload Trivy SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif
          category: trivy

      # ----------- Fail PR on Trivy HIGH/CRITICAL -----------
      - name: Fail PR on Trivy HIGH/CRITICAL
        if: github.event_name == 'pull_request'
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL --ignore-unfixed ip-lookup-webapp-server:latest || {
            echo "::error::Trivy found HIGH/CRITICAL issues"
            exit 1
          }

      # ----------- Gitleaks secret scan -----------
      - name: Check for secrets in code
        uses: gitleaks/gitleaks-action@v2

      # ----------- Dependency review -----------
      - name: Dependency Review
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v4

      # ----------- Push to main always green -----------
      - name: Push to main always green
        if: github.event_name == 'push'
        run: echo "Push to main is report-only; PRs enforce strict gates."